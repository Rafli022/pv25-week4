# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'pos_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtWidgets, QtCore

class POSApp(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("POS Application")
        self.resize(500, 400)

        # Layout utama
        self.centralwidget = QtWidgets.QWidget(self)
        self.setCentralWidget(self.centralwidget)
        layout = QtWidgets.QVBoxLayout(self.centralwidget)

        # Dropdown Produk
        self.productDropdown = QtWidgets.QComboBox()
        self.productDropdown.addItems(["Laptop", "Mouse", "Keyboard", "Monitor"])
        layout.addWidget(QtWidgets.QLabel("Product"))
        layout.addWidget(self.productDropdown)

        # Input Jumlah Produk
        self.quantityInput = QtWidgets.QLineEdit()
        layout.addWidget(QtWidgets.QLabel("Quantity"))
        layout.addWidget(self.quantityInput)

        # Dropdown Diskon
        self.discountDropdown = QtWidgets.QComboBox()
        self.discountDropdown.addItems(["0%", "10%", "20%", "30%"])
        layout.addWidget(QtWidgets.QLabel("Discount"))
        layout.addWidget(self.discountDropdown)

        # Tombol
        self.buttonLayout = QtWidgets.QHBoxLayout()
        self.addButton = QtWidgets.QPushButton("Add to Cart")
        self.clearButton = QtWidgets.QPushButton("Clear")
        self.buttonLayout.addWidget(self.addButton)
        self.buttonLayout.addWidget(self.clearButton)
        layout.addLayout(self.buttonLayout)

        # Tabel Keranjang
        self.cartTable = QtWidgets.QTableWidget()
        self.cartTable.setColumnCount(3)
        self.cartTable.setHorizontalHeaderLabels(["Product", "Quantity", "Price"])
        layout.addWidget(self.cartTable)

        # Label untuk total harga
        self.totalLabel = QtWidgets.QLabel("Total: Invalid input")
        layout.addWidget(self.totalLabel)

        # Label untuk pesan error
        self.errorLabel = QtWidgets.QLabel()
        self.errorLabel.setStyleSheet("color: red;")
        layout.addWidget(self.errorLabel)

        # Event Handling
        self.addButton.clicked.connect(self.add_to_cart)
        self.clearButton.clicked.connect(self.clear_form)

        # Data produk (harga per item)
        self.productPrices = {"Laptop": 10000000, "Mouse": 150000, "Keyboard": 300000, "Monitor": 2000000}

    def add_to_cart(self):
        product = self.productDropdown.currentText()
        quantity_text = self.quantityInput.text()
        discount = self.discountDropdown.currentText()

        # Validasi input
        if not quantity_text.isdigit() or int(quantity_text) <= 0:
            self.errorLabel.setText("Invalid input")
            return

        quantity = int(quantity_text)
        price = self.productPrices[product] * quantity
        discount_value = int(discount.replace("%", "")) / 100
        final_price = price - (price * discount_value)

        # Tambah ke tabel
        row = self.cartTable.rowCount()
        self.cartTable.insertRow(row)
        self.cartTable.setItem(row, 0, QtWidgets.QTableWidgetItem(product))
        self.cartTable.setItem(row, 1, QtWidgets.QTableWidgetItem(str(quantity)))
        self.cartTable.setItem(row, 2, QtWidgets.QTableWidgetItem(f"Rp {final_price:,.2f}"))

        self.errorLabel.setText("")
        self.update_total()

    def clear_form(self):
        self.quantityInput.clear()
        self.discountDropdown.setCurrentIndex(0)
        self.errorLabel.setText("")
        self.cartTable.setRowCount(0)
        self.update_total()

    def update_total(self):
        total = 0
        for row in range(self.cartTable.rowCount()):
            total += float(self.cartTable.item(row, 2).text().replace("Rp ", "").replace(",", ""))
        
        if total == 0:
            self.totalLabel.setText("Invalid input")
        else:
            self.totalLabel.setText(f"Total: Rp {total:,.2f}")

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    window = POSApp()
    window.show()
    sys.exit(app.exec_())
